### YamlMime:ManagedReference
items:
- uid: GeometrySharp.Geometry.Ray
  commentId: T:GeometrySharp.Geometry.Ray
  id: Ray
  parent: GeometrySharp.Geometry
  children:
  - GeometrySharp.Geometry.Ray.#ctor(GeometrySharp.Geometry.Vector3,GeometrySharp.Geometry.Vector3)
  - GeometrySharp.Geometry.Ray.ClosestPoint(GeometrySharp.Geometry.Vector3)
  - GeometrySharp.Geometry.Ray.Direction
  - GeometrySharp.Geometry.Ray.DistanceTo(GeometrySharp.Geometry.Vector3)
  - GeometrySharp.Geometry.Ray.OnRay(System.Double)
  - GeometrySharp.Geometry.Ray.PointAt(System.Double)
  - GeometrySharp.Geometry.Ray.Position
  langs:
  - csharp
  - vb
  name: Ray
  nameWithType: Ray
  fullName: GeometrySharp.Geometry.Ray
  type: Class
  source:
    remote:
      path: GeometrySharp/Geometry/Ray.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: Ray
    path: ../GeometrySharp/Geometry/Ray.cs
    startLine: 14
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Geometry
  summary: "\nA Ray is simply an position point and normal.\n"
  example: []
  syntax:
    content: public class Ray
    content.vb: Public Class Ray
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GeometrySharp.Geometry.Ray.Direction
  commentId: P:GeometrySharp.Geometry.Ray.Direction
  id: Direction
  parent: GeometrySharp.Geometry.Ray
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: Ray.Direction
  fullName: GeometrySharp.Geometry.Ray.Direction
  type: Property
  source:
    remote:
      path: GeometrySharp/Geometry/Ray.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: Direction
    path: ../GeometrySharp/Geometry/Ray.cs
    startLine: 16
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Geometry
  syntax:
    content: public Vector3 Direction { get; set; }
    parameters: []
    return:
      type: GeometrySharp.Geometry.Vector3
    content.vb: Public Property Direction As Vector3
  overload: GeometrySharp.Geometry.Ray.Direction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GeometrySharp.Geometry.Ray.Position
  commentId: P:GeometrySharp.Geometry.Ray.Position
  id: Position
  parent: GeometrySharp.Geometry.Ray
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Ray.Position
  fullName: GeometrySharp.Geometry.Ray.Position
  type: Property
  source:
    remote:
      path: GeometrySharp/Geometry/Ray.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: Position
    path: ../GeometrySharp/Geometry/Ray.cs
    startLine: 17
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Geometry
  syntax:
    content: public Vector3 Position { get; set; }
    parameters: []
    return:
      type: GeometrySharp.Geometry.Vector3
    content.vb: Public Property Position As Vector3
  overload: GeometrySharp.Geometry.Ray.Position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GeometrySharp.Geometry.Ray.#ctor(GeometrySharp.Geometry.Vector3,GeometrySharp.Geometry.Vector3)
  commentId: M:GeometrySharp.Geometry.Ray.#ctor(GeometrySharp.Geometry.Vector3,GeometrySharp.Geometry.Vector3)
  id: '#ctor(GeometrySharp.Geometry.Vector3,GeometrySharp.Geometry.Vector3)'
  parent: GeometrySharp.Geometry.Ray
  langs:
  - csharp
  - vb
  name: Ray(Vector3, Vector3)
  nameWithType: Ray.Ray(Vector3, Vector3)
  fullName: GeometrySharp.Geometry.Ray.Ray(GeometrySharp.Geometry.Vector3, GeometrySharp.Geometry.Vector3)
  type: Constructor
  source:
    remote:
      path: GeometrySharp/Geometry/Ray.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: .ctor
    path: ../GeometrySharp/Geometry/Ray.cs
    startLine: 18
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Geometry
  syntax:
    content: public Ray(Vector3 position, Vector3 direction)
    parameters:
    - id: position
      type: GeometrySharp.Geometry.Vector3
    - id: direction
      type: GeometrySharp.Geometry.Vector3
    content.vb: Public Sub New(position As Vector3, direction As Vector3)
  overload: GeometrySharp.Geometry.Ray.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeometrySharp.Geometry.Ray.OnRay(System.Double)
  commentId: M:GeometrySharp.Geometry.Ray.OnRay(System.Double)
  id: OnRay(System.Double)
  parent: GeometrySharp.Geometry.Ray
  langs:
  - csharp
  - vb
  name: OnRay(Double)
  nameWithType: Ray.OnRay(Double)
  fullName: GeometrySharp.Geometry.Ray.OnRay(System.Double)
  type: Method
  source:
    remote:
      path: GeometrySharp/Geometry/Ray.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: OnRay
    path: ../GeometrySharp/Geometry/Ray.cs
    startLine: 29
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Geometry
  summary: "\nGets the point moved by a scalar value along a direction.\n"
  example: []
  syntax:
    content: public Vector3 OnRay(double amplitude)
    parameters:
    - id: amplitude
      type: System.Double
      description: The scalar value to amplify the vector.
    return:
      type: GeometrySharp.Geometry.Vector3
      description: The point along the ray.
    content.vb: Public Function OnRay(amplitude As Double) As Vector3
  overload: GeometrySharp.Geometry.Ray.OnRay*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeometrySharp.Geometry.Ray.ClosestPoint(GeometrySharp.Geometry.Vector3)
  commentId: M:GeometrySharp.Geometry.Ray.ClosestPoint(GeometrySharp.Geometry.Vector3)
  id: ClosestPoint(GeometrySharp.Geometry.Vector3)
  parent: GeometrySharp.Geometry.Ray
  langs:
  - csharp
  - vb
  name: ClosestPoint(Vector3)
  nameWithType: Ray.ClosestPoint(Vector3)
  fullName: GeometrySharp.Geometry.Ray.ClosestPoint(GeometrySharp.Geometry.Vector3)
  type: Method
  source:
    remote:
      path: GeometrySharp/Geometry/Ray.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: ClosestPoint
    path: ../GeometrySharp/Geometry/Ray.cs
    startLine: 40
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Geometry
  summary: "\nGet the closest point on a ray from a point.\n"
  example: []
  syntax:
    content: public Vector3 ClosestPoint(Vector3 pt)
    parameters:
    - id: pt
      type: GeometrySharp.Geometry.Vector3
      description: The point.
    return:
      type: GeometrySharp.Geometry.Vector3
      description: Get the closest point on a ray from a point.
    content.vb: Public Function ClosestPoint(pt As Vector3) As Vector3
  overload: GeometrySharp.Geometry.Ray.ClosestPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeometrySharp.Geometry.Ray.DistanceTo(GeometrySharp.Geometry.Vector3)
  commentId: M:GeometrySharp.Geometry.Ray.DistanceTo(GeometrySharp.Geometry.Vector3)
  id: DistanceTo(GeometrySharp.Geometry.Vector3)
  parent: GeometrySharp.Geometry.Ray
  langs:
  - csharp
  - vb
  name: DistanceTo(Vector3)
  nameWithType: Ray.DistanceTo(Vector3)
  fullName: GeometrySharp.Geometry.Ray.DistanceTo(GeometrySharp.Geometry.Vector3)
  type: Method
  source:
    remote:
      path: GeometrySharp/Geometry/Ray.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: DistanceTo
    path: ../GeometrySharp/Geometry/Ray.cs
    startLine: 55
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Geometry
  summary: "\nCompute the shortest distance between this ray and a test point.\n"
  example: []
  syntax:
    content: public double DistanceTo(Vector3 pt)
    parameters:
    - id: pt
      type: GeometrySharp.Geometry.Vector3
      description: The point to project.
    return:
      type: System.Double
      description: The distance.
    content.vb: Public Function DistanceTo(pt As Vector3) As Double
  overload: GeometrySharp.Geometry.Ray.DistanceTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeometrySharp.Geometry.Ray.PointAt(System.Double)
  commentId: M:GeometrySharp.Geometry.Ray.PointAt(System.Double)
  id: PointAt(System.Double)
  parent: GeometrySharp.Geometry.Ray
  langs:
  - csharp
  - vb
  name: PointAt(Double)
  nameWithType: Ray.PointAt(Double)
  fullName: GeometrySharp.Geometry.Ray.PointAt(System.Double)
  type: Method
  source:
    remote:
      path: GeometrySharp/Geometry/Ray.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: PointAt
    path: ../GeometrySharp/Geometry/Ray.cs
    startLine: 67
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Geometry
  summary: "\nEvaluates a point along the ray.\n"
  example: []
  syntax:
    content: public Vector3 PointAt(double t)
    parameters:
    - id: t
      type: System.Double
      description: The t parameter.
    return:
      type: GeometrySharp.Geometry.Vector3
      description: A point at (Direction*t + Position).
    content.vb: Public Function PointAt(t As Double) As Vector3
  overload: GeometrySharp.Geometry.Ray.PointAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: GeometrySharp.Geometry
  commentId: N:GeometrySharp.Geometry
  name: GeometrySharp.Geometry
  nameWithType: GeometrySharp.Geometry
  fullName: GeometrySharp.Geometry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GeometrySharp.Geometry.Ray.Direction*
  commentId: Overload:GeometrySharp.Geometry.Ray.Direction
  name: Direction
  nameWithType: Ray.Direction
  fullName: GeometrySharp.Geometry.Ray.Direction
- uid: GeometrySharp.Geometry.Vector3
  commentId: T:GeometrySharp.Geometry.Vector3
  parent: GeometrySharp.Geometry
  name: Vector3
  nameWithType: Vector3
  fullName: GeometrySharp.Geometry.Vector3
- uid: GeometrySharp.Geometry.Ray.Position*
  commentId: Overload:GeometrySharp.Geometry.Ray.Position
  name: Position
  nameWithType: Ray.Position
  fullName: GeometrySharp.Geometry.Ray.Position
- uid: GeometrySharp.Geometry.Ray.#ctor*
  commentId: Overload:GeometrySharp.Geometry.Ray.#ctor
  name: Ray
  nameWithType: Ray.Ray
  fullName: GeometrySharp.Geometry.Ray.Ray
- uid: GeometrySharp.Geometry.Ray.OnRay*
  commentId: Overload:GeometrySharp.Geometry.Ray.OnRay
  name: OnRay
  nameWithType: Ray.OnRay
  fullName: GeometrySharp.Geometry.Ray.OnRay
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: GeometrySharp.Geometry.Ray.ClosestPoint*
  commentId: Overload:GeometrySharp.Geometry.Ray.ClosestPoint
  name: ClosestPoint
  nameWithType: Ray.ClosestPoint
  fullName: GeometrySharp.Geometry.Ray.ClosestPoint
- uid: GeometrySharp.Geometry.Ray.DistanceTo*
  commentId: Overload:GeometrySharp.Geometry.Ray.DistanceTo
  name: DistanceTo
  nameWithType: Ray.DistanceTo
  fullName: GeometrySharp.Geometry.Ray.DistanceTo
- uid: GeometrySharp.Geometry.Ray.PointAt*
  commentId: Overload:GeometrySharp.Geometry.Ray.PointAt
  name: PointAt
  nameWithType: Ray.PointAt
  fullName: GeometrySharp.Geometry.Ray.PointAt
