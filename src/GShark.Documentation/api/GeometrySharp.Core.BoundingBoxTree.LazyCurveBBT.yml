### YamlMime:ManagedReference
items:
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT
  commentId: T:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT
  id: LazyCurveBBT
  parent: GeometrySharp.Core.BoundingBoxTree
  children:
  - GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.#ctor(GeometrySharp.Geometry.NurbsCurve,System.Double)
  - GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.BoundingBox
  - GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsEmpty
  - GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsIndivisible(System.Double)
  - GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Length
  - GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Split
  - GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Yield
  langs:
  - csharp
  - vb
  name: LazyCurveBBT
  nameWithType: LazyCurveBBT
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT
  type: Class
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: LazyCurveBBT
    path: ../GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
    startLine: 9
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: 'public class LazyCurveBBT : IBoundingBoxTree<NurbsCurve>'
    content.vb: >-
      Public Class LazyCurveBBT

          Implements IBoundingBoxTree(Of NurbsCurve)
  inheritance:
  - System.Object
  implements:
  - GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.#ctor(GeometrySharp.Geometry.NurbsCurve,System.Double)
  commentId: M:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.#ctor(GeometrySharp.Geometry.NurbsCurve,System.Double)
  id: '#ctor(GeometrySharp.Geometry.NurbsCurve,System.Double)'
  parent: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT
  langs:
  - csharp
  - vb
  name: LazyCurveBBT(NurbsCurve, Double)
  nameWithType: LazyCurveBBT.LazyCurveBBT(NurbsCurve, Double)
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.LazyCurveBBT(GeometrySharp.Geometry.NurbsCurve, System.Double)
  type: Constructor
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: .ctor
    path: ../GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
    startLine: 15
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: public LazyCurveBBT(NurbsCurve curve, double knotTolerance = NaN)
    parameters:
    - id: curve
      type: GeometrySharp.Geometry.NurbsCurve
    - id: knotTolerance
      type: System.Double
    content.vb: Public Sub New(curve As NurbsCurve, knotTolerance As Double = NaN)
  overload: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.BoundingBox
  commentId: M:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.BoundingBox
  id: BoundingBox
  parent: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT
  langs:
  - csharp
  - vb
  name: BoundingBox()
  nameWithType: LazyCurveBBT.BoundingBox()
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.BoundingBox()
  type: Method
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: BoundingBox
    path: ../GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
    startLine: 27
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: public BoundingBox BoundingBox()
    return:
      type: GeometrySharp.Geometry.BoundingBox
    content.vb: Public Function BoundingBox As BoundingBox
  overload: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.BoundingBox*
  implements:
  - GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.BoundingBox
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Split
  commentId: M:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Split
  id: Split
  parent: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT
  langs:
  - csharp
  - vb
  name: Split()
  nameWithType: LazyCurveBBT.Split()
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Split()
  type: Method
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: Split
    path: ../GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
    startLine: 32
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: public Tuple<IBoundingBoxTree<NurbsCurve>, IBoundingBoxTree<NurbsCurve>> Split()
    return:
      type: System.Tuple{GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve},GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}}
    content.vb: Public Function Split As Tuple(Of IBoundingBoxTree(Of NurbsCurve), IBoundingBoxTree(Of NurbsCurve))
  overload: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Split*
  implements:
  - GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.Split
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Yield
  commentId: M:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Yield
  id: Yield
  parent: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT
  langs:
  - csharp
  - vb
  name: Yield()
  nameWithType: LazyCurveBBT.Yield()
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Yield()
  type: Method
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: Yield
    path: ../GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
    startLine: 43
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: public NurbsCurve Yield()
    return:
      type: GeometrySharp.Geometry.NurbsCurve
    content.vb: Public Function Yield As NurbsCurve
  overload: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Yield*
  implements:
  - GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.Yield
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsIndivisible(System.Double)
  commentId: M:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsIndivisible(System.Double)
  id: IsIndivisible(System.Double)
  parent: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT
  langs:
  - csharp
  - vb
  name: IsIndivisible(Double)
  nameWithType: LazyCurveBBT.IsIndivisible(Double)
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsIndivisible(System.Double)
  type: Method
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: IsIndivisible
    path: ../GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
    startLine: 48
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: public bool IsIndivisible(double tolerance)
    parameters:
    - id: tolerance
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Function IsIndivisible(tolerance As Double) As Boolean
  overload: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsIndivisible*
  implements:
  - GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.IsIndivisible(System.Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsEmpty
  commentId: M:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsEmpty
  id: IsEmpty
  parent: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT
  langs:
  - csharp
  - vb
  name: IsEmpty()
  nameWithType: LazyCurveBBT.IsEmpty()
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsEmpty()
  type: Method
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: IsEmpty
    path: ../GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
    startLine: 53
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: public bool IsEmpty()
    return:
      type: System.Boolean
    content.vb: Public Function IsEmpty As Boolean
  overload: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsEmpty*
  implements:
  - GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.IsEmpty
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Length
  commentId: M:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Length
  id: Length
  parent: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT
  langs:
  - csharp
  - vb
  name: Length()
  nameWithType: LazyCurveBBT.Length()
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Length()
  type: Method
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: Length
    path: ../GeometrySharp/Core/BoundingBoxTree/LazyCurveBBT.cs
    startLine: 58
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: public double Length()
    return:
      type: System.Double
    content.vb: Public Function Length As Double
  overload: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Length*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: GeometrySharp.Core.BoundingBoxTree
  commentId: N:GeometrySharp.Core.BoundingBoxTree
  name: GeometrySharp.Core.BoundingBoxTree
  nameWithType: GeometrySharp.Core.BoundingBoxTree
  fullName: GeometrySharp.Core.BoundingBoxTree
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}
  commentId: T:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}
  parent: GeometrySharp.Core.BoundingBoxTree
  definition: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
  name: IBoundingBoxTree<NurbsCurve>
  nameWithType: IBoundingBoxTree<NurbsCurve>
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>
  nameWithType.vb: IBoundingBoxTree(Of NurbsCurve)
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve)
  name.vb: IBoundingBoxTree(Of NurbsCurve)
  spec.csharp:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
    name: IBoundingBoxTree
    nameWithType: IBoundingBoxTree
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree
  - name: <
    nameWithType: <
    fullName: <
  - uid: GeometrySharp.Geometry.NurbsCurve
    name: NurbsCurve
    nameWithType: NurbsCurve
    fullName: GeometrySharp.Geometry.NurbsCurve
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
    name: IBoundingBoxTree
    nameWithType: IBoundingBoxTree
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GeometrySharp.Geometry.NurbsCurve
    name: NurbsCurve
    nameWithType: NurbsCurve
    fullName: GeometrySharp.Geometry.NurbsCurve
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
  commentId: T:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
  name: IBoundingBoxTree<T>
  nameWithType: IBoundingBoxTree<T>
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>
  nameWithType.vb: IBoundingBoxTree(Of T)
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T)
  name.vb: IBoundingBoxTree(Of T)
  spec.csharp:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
    name: IBoundingBoxTree
    nameWithType: IBoundingBoxTree
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
    name: IBoundingBoxTree
    nameWithType: IBoundingBoxTree
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.#ctor*
  commentId: Overload:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.#ctor
  name: LazyCurveBBT
  nameWithType: LazyCurveBBT.LazyCurveBBT
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.LazyCurveBBT
- uid: GeometrySharp.Geometry.NurbsCurve
  commentId: T:GeometrySharp.Geometry.NurbsCurve
  parent: GeometrySharp.Geometry
  name: NurbsCurve
  nameWithType: NurbsCurve
  fullName: GeometrySharp.Geometry.NurbsCurve
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: GeometrySharp.Geometry
  commentId: N:GeometrySharp.Geometry
  name: GeometrySharp.Geometry
  nameWithType: GeometrySharp.Geometry
  fullName: GeometrySharp.Geometry
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.BoundingBox*
  commentId: Overload:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.BoundingBox
  name: BoundingBox
  nameWithType: LazyCurveBBT.BoundingBox
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.BoundingBox
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.BoundingBox
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.BoundingBox
  parent: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}
  definition: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox
  name: BoundingBox()
  nameWithType: IBoundingBoxTree<NurbsCurve>.BoundingBox()
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>.BoundingBox()
  nameWithType.vb: IBoundingBoxTree(Of NurbsCurve).BoundingBox()
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve).BoundingBox()
  spec.csharp:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox
    name: BoundingBox
    nameWithType: IBoundingBoxTree<NurbsCurve>.BoundingBox
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>.BoundingBox
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox
    name: BoundingBox
    nameWithType: IBoundingBoxTree(Of NurbsCurve).BoundingBox
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve).BoundingBox
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeometrySharp.Geometry.BoundingBox
  commentId: T:GeometrySharp.Geometry.BoundingBox
  parent: GeometrySharp.Geometry
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: GeometrySharp.Geometry.BoundingBox
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox
  name: BoundingBox()
  nameWithType: IBoundingBoxTree<T>.BoundingBox()
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.BoundingBox()
  nameWithType.vb: IBoundingBoxTree(Of T).BoundingBox()
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).BoundingBox()
  spec.csharp:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox
    name: BoundingBox
    nameWithType: IBoundingBoxTree<T>.BoundingBox
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.BoundingBox
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox
    name: BoundingBox
    nameWithType: IBoundingBoxTree(Of T).BoundingBox
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).BoundingBox
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Split*
  commentId: Overload:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Split
  name: Split
  nameWithType: LazyCurveBBT.Split
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Split
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.Split
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.Split
  parent: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}
  definition: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split
  name: Split()
  nameWithType: IBoundingBoxTree<NurbsCurve>.Split()
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>.Split()
  nameWithType.vb: IBoundingBoxTree(Of NurbsCurve).Split()
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve).Split()
  spec.csharp:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split
    name: Split
    nameWithType: IBoundingBoxTree<NurbsCurve>.Split
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>.Split
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split
    name: Split
    nameWithType: IBoundingBoxTree(Of NurbsCurve).Split
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve).Split
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple{GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve},GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}}
  commentId: T:System.Tuple{GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve},GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}}
  parent: System
  definition: System.Tuple`2
  name: Tuple<IBoundingBoxTree<NurbsCurve>, IBoundingBoxTree<NurbsCurve>>
  nameWithType: Tuple<IBoundingBoxTree<NurbsCurve>, IBoundingBoxTree<NurbsCurve>>
  fullName: System.Tuple<GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>, GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>>
  nameWithType.vb: Tuple(Of IBoundingBoxTree(Of NurbsCurve), IBoundingBoxTree(Of NurbsCurve))
  fullName.vb: System.Tuple(Of GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve), GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve))
  name.vb: Tuple(Of IBoundingBoxTree(Of NurbsCurve), IBoundingBoxTree(Of NurbsCurve))
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
    name: IBoundingBoxTree
    nameWithType: IBoundingBoxTree
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree
  - name: <
    nameWithType: <
    fullName: <
  - uid: GeometrySharp.Geometry.NurbsCurve
    name: NurbsCurve
    nameWithType: NurbsCurve
    fullName: GeometrySharp.Geometry.NurbsCurve
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
    name: IBoundingBoxTree
    nameWithType: IBoundingBoxTree
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree
  - name: <
    nameWithType: <
    fullName: <
  - uid: GeometrySharp.Geometry.NurbsCurve
    name: NurbsCurve
    nameWithType: NurbsCurve
    fullName: GeometrySharp.Geometry.NurbsCurve
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
    name: IBoundingBoxTree
    nameWithType: IBoundingBoxTree
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GeometrySharp.Geometry.NurbsCurve
    name: NurbsCurve
    nameWithType: NurbsCurve
    fullName: GeometrySharp.Geometry.NurbsCurve
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
    name: IBoundingBoxTree
    nameWithType: IBoundingBoxTree
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GeometrySharp.Geometry.NurbsCurve
    name: NurbsCurve
    nameWithType: NurbsCurve
    fullName: GeometrySharp.Geometry.NurbsCurve
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split
  name: Split()
  nameWithType: IBoundingBoxTree<T>.Split()
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.Split()
  nameWithType.vb: IBoundingBoxTree(Of T).Split()
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).Split()
  spec.csharp:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split
    name: Split
    nameWithType: IBoundingBoxTree<T>.Split
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.Split
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split
    name: Split
    nameWithType: IBoundingBoxTree(Of T).Split
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).Split
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullName.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Yield*
  commentId: Overload:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Yield
  name: Yield
  nameWithType: LazyCurveBBT.Yield
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Yield
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.Yield
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.Yield
  parent: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}
  definition: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield
  name: Yield()
  nameWithType: IBoundingBoxTree<NurbsCurve>.Yield()
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>.Yield()
  nameWithType.vb: IBoundingBoxTree(Of NurbsCurve).Yield()
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve).Yield()
  spec.csharp:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield
    name: Yield
    nameWithType: IBoundingBoxTree<NurbsCurve>.Yield
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>.Yield
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield
    name: Yield
    nameWithType: IBoundingBoxTree(Of NurbsCurve).Yield
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve).Yield
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield
  name: Yield()
  nameWithType: IBoundingBoxTree<T>.Yield()
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.Yield()
  nameWithType.vb: IBoundingBoxTree(Of T).Yield()
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).Yield()
  spec.csharp:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield
    name: Yield
    nameWithType: IBoundingBoxTree<T>.Yield
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.Yield
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield
    name: Yield
    nameWithType: IBoundingBoxTree(Of T).Yield
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).Yield
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsIndivisible*
  commentId: Overload:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsIndivisible
  name: IsIndivisible
  nameWithType: LazyCurveBBT.IsIndivisible
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsIndivisible
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.IsIndivisible(System.Double)
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.IsIndivisible(System.Double)
  parent: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}
  definition: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible(System.Double)
  name: IsIndivisible(Double)
  nameWithType: IBoundingBoxTree<NurbsCurve>.IsIndivisible(Double)
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>.IsIndivisible(System.Double)
  nameWithType.vb: IBoundingBoxTree(Of NurbsCurve).IsIndivisible(Double)
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve).IsIndivisible(System.Double)
  spec.csharp:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible(System.Double)
    name: IsIndivisible
    nameWithType: IBoundingBoxTree<NurbsCurve>.IsIndivisible
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>.IsIndivisible
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible(System.Double)
    name: IsIndivisible
    nameWithType: IBoundingBoxTree(Of NurbsCurve).IsIndivisible
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve).IsIndivisible
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible(System.Double)
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible(System.Double)
  isExternal: true
  name: IsIndivisible(Double)
  nameWithType: IBoundingBoxTree<T>.IsIndivisible(Double)
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.IsIndivisible(System.Double)
  nameWithType.vb: IBoundingBoxTree(Of T).IsIndivisible(Double)
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).IsIndivisible(System.Double)
  spec.csharp:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible(System.Double)
    name: IsIndivisible
    nameWithType: IBoundingBoxTree<T>.IsIndivisible
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.IsIndivisible
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible(System.Double)
    name: IsIndivisible
    nameWithType: IBoundingBoxTree(Of T).IsIndivisible
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).IsIndivisible
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsEmpty*
  commentId: Overload:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsEmpty
  name: IsEmpty
  nameWithType: LazyCurveBBT.IsEmpty
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.IsEmpty
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.IsEmpty
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}.IsEmpty
  parent: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree{GeometrySharp.Geometry.NurbsCurve}
  definition: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty
  name: IsEmpty()
  nameWithType: IBoundingBoxTree<NurbsCurve>.IsEmpty()
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>.IsEmpty()
  nameWithType.vb: IBoundingBoxTree(Of NurbsCurve).IsEmpty()
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve).IsEmpty()
  spec.csharp:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty
    name: IsEmpty
    nameWithType: IBoundingBoxTree<NurbsCurve>.IsEmpty
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<GeometrySharp.Geometry.NurbsCurve>.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty
    name: IsEmpty
    nameWithType: IBoundingBoxTree(Of NurbsCurve).IsEmpty
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of GeometrySharp.Geometry.NurbsCurve).IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty
  name: IsEmpty()
  nameWithType: IBoundingBoxTree<T>.IsEmpty()
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.IsEmpty()
  nameWithType.vb: IBoundingBoxTree(Of T).IsEmpty()
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).IsEmpty()
  spec.csharp:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty
    name: IsEmpty
    nameWithType: IBoundingBoxTree<T>.IsEmpty
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty
    name: IsEmpty
    nameWithType: IBoundingBoxTree(Of T).IsEmpty
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Length*
  commentId: Overload:GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Length
  name: Length
  nameWithType: LazyCurveBBT.Length
  fullName: GeometrySharp.Core.BoundingBoxTree.LazyCurveBBT.Length
