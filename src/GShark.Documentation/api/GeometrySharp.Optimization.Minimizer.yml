### YamlMime:ManagedReference
items:
- uid: GeometrySharp.Optimization.Minimizer
  commentId: T:GeometrySharp.Optimization.Minimizer
  id: Minimizer
  parent: GeometrySharp.Optimization
  children:
  - GeometrySharp.Optimization.Minimizer.#ctor(GeometrySharp.Optimization.IObjectiveFunction)
  - GeometrySharp.Optimization.Minimizer.UnconstrainedMinimizer(GeometrySharp.Geometry.Vector3,System.Double,System.Int32)
  langs:
  - csharp
  - vb
  name: Minimizer
  nameWithType: Minimizer
  fullName: GeometrySharp.Optimization.Minimizer
  type: Class
  source:
    remote:
      path: GeometrySharp/Optimization/Minimizer.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: Minimizer
    path: ../GeometrySharp/Optimization/Minimizer.cs
    startLine: 11
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Optimization
  summary: "\nThe Minimizer solves for unconstrained problems, using a gradient descendent.\nThis class is at the base of some intersection methods.\n"
  example: []
  syntax:
    content: public class Minimizer
    content.vb: Public Class Minimizer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GeometrySharp.Optimization.Minimizer.#ctor(GeometrySharp.Optimization.IObjectiveFunction)
  commentId: M:GeometrySharp.Optimization.Minimizer.#ctor(GeometrySharp.Optimization.IObjectiveFunction)
  id: '#ctor(GeometrySharp.Optimization.IObjectiveFunction)'
  parent: GeometrySharp.Optimization.Minimizer
  langs:
  - csharp
  - vb
  name: Minimizer(IObjectiveFunction)
  nameWithType: Minimizer.Minimizer(IObjectiveFunction)
  fullName: GeometrySharp.Optimization.Minimizer.Minimizer(GeometrySharp.Optimization.IObjectiveFunction)
  type: Constructor
  source:
    remote:
      path: GeometrySharp/Optimization/Minimizer.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: .ctor
    path: ../GeometrySharp/Optimization/Minimizer.cs
    startLine: 19
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Optimization
  summary: "\nMinimizer initialization.\n"
  example: []
  syntax:
    content: public Minimizer(IObjectiveFunction objectiveFunction)
    parameters:
    - id: objectiveFunction
      type: GeometrySharp.Optimization.IObjectiveFunction
      description: The objective functions used into the minimization process.
    content.vb: Public Sub New(objectiveFunction As IObjectiveFunction)
  overload: GeometrySharp.Optimization.Minimizer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeometrySharp.Optimization.Minimizer.UnconstrainedMinimizer(GeometrySharp.Geometry.Vector3,System.Double,System.Int32)
  commentId: M:GeometrySharp.Optimization.Minimizer.UnconstrainedMinimizer(GeometrySharp.Geometry.Vector3,System.Double,System.Int32)
  id: UnconstrainedMinimizer(GeometrySharp.Geometry.Vector3,System.Double,System.Int32)
  parent: GeometrySharp.Optimization.Minimizer
  langs:
  - csharp
  - vb
  name: UnconstrainedMinimizer(Vector3, Double, Int32)
  nameWithType: Minimizer.UnconstrainedMinimizer(Vector3, Double, Int32)
  fullName: GeometrySharp.Optimization.Minimizer.UnconstrainedMinimizer(GeometrySharp.Geometry.Vector3, System.Double, System.Int32)
  type: Method
  source:
    remote:
      path: GeometrySharp/Optimization/Minimizer.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: UnconstrainedMinimizer
    path: ../GeometrySharp/Optimization/Minimizer.cs
    startLine: 31
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Optimization
  summary: "\nThe Minimizer solves for unconstrained problems, using a gradient descendent.\n"
  example: []
  syntax:
    content: public MinimizationResult UnconstrainedMinimizer(Vector3 initialGuess, double gradientTolerance = 1E-08, int maxIteration = 1000)
    parameters:
    - id: initialGuess
      type: GeometrySharp.Geometry.Vector3
      description: The vector initial guess.
    - id: gradientTolerance
      type: System.Double
      description: The gradient tolerance set per default to 1e-8.
    - id: maxIteration
      type: System.Int32
      description: The number of iteration used, set per default 1000.
    return:
      type: GeometrySharp.Optimization.MinimizationResult
      description: The minimization result, <xref href="GeometrySharp.Optimization.MinimizationResult" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function UnconstrainedMinimizer(initialGuess As Vector3, gradientTolerance As Double = 1E-08, maxIteration As Integer = 1000) As MinimizationResult
  overload: GeometrySharp.Optimization.Minimizer.UnconstrainedMinimizer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: GeometrySharp.Optimization
  commentId: N:GeometrySharp.Optimization
  name: GeometrySharp.Optimization
  nameWithType: GeometrySharp.Optimization
  fullName: GeometrySharp.Optimization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GeometrySharp.Optimization.Minimizer.#ctor*
  commentId: Overload:GeometrySharp.Optimization.Minimizer.#ctor
  name: Minimizer
  nameWithType: Minimizer.Minimizer
  fullName: GeometrySharp.Optimization.Minimizer.Minimizer
- uid: GeometrySharp.Optimization.IObjectiveFunction
  commentId: T:GeometrySharp.Optimization.IObjectiveFunction
  parent: GeometrySharp.Optimization
  name: IObjectiveFunction
  nameWithType: IObjectiveFunction
  fullName: GeometrySharp.Optimization.IObjectiveFunction
- uid: GeometrySharp.Optimization.MinimizationResult
  commentId: T:GeometrySharp.Optimization.MinimizationResult
  parent: GeometrySharp.Optimization
  name: MinimizationResult
  nameWithType: MinimizationResult
  fullName: GeometrySharp.Optimization.MinimizationResult
- uid: GeometrySharp.Optimization.Minimizer.UnconstrainedMinimizer*
  commentId: Overload:GeometrySharp.Optimization.Minimizer.UnconstrainedMinimizer
  name: UnconstrainedMinimizer
  nameWithType: Minimizer.UnconstrainedMinimizer
  fullName: GeometrySharp.Optimization.Minimizer.UnconstrainedMinimizer
- uid: GeometrySharp.Geometry.Vector3
  commentId: T:GeometrySharp.Geometry.Vector3
  parent: GeometrySharp.Geometry
  name: Vector3
  nameWithType: Vector3
  fullName: GeometrySharp.Geometry.Vector3
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GeometrySharp.Geometry
  commentId: N:GeometrySharp.Geometry
  name: GeometrySharp.Geometry
  nameWithType: GeometrySharp.Geometry
  fullName: GeometrySharp.Geometry
