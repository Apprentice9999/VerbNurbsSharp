### YamlMime:ManagedReference
items:
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
  commentId: T:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
  id: IBoundingBoxTree`1
  parent: GeometrySharp.Core.BoundingBoxTree
  children:
  - GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox
  - GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty
  - GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible(System.Double)
  - GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split
  - GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield
  langs:
  - csharp
  - vb
  name: IBoundingBoxTree<T>
  nameWithType: IBoundingBoxTree<T>
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>
  type: Interface
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/IBoundingBoxTree.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: IBoundingBoxTree
    path: ../GeometrySharp/Core/BoundingBoxTree/IBoundingBoxTree.cs
    startLine: 5
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: public interface IBoundingBoxTree<T>
    typeParameters:
    - id: T
    content.vb: Public Interface IBoundingBoxTree(Of T)
  nameWithType.vb: IBoundingBoxTree(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T)
  name.vb: IBoundingBoxTree(Of T)
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox
  id: BoundingBox
  parent: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
  langs:
  - csharp
  - vb
  name: BoundingBox()
  nameWithType: IBoundingBoxTree<T>.BoundingBox()
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.BoundingBox()
  type: Method
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/IBoundingBoxTree.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: BoundingBox
    path: ../GeometrySharp/Core/BoundingBoxTree/IBoundingBoxTree.cs
    startLine: 7
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: BoundingBox BoundingBox()
    return:
      type: GeometrySharp.Geometry.BoundingBox
    content.vb: Function BoundingBox As BoundingBox
  overload: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox*
  nameWithType.vb: IBoundingBoxTree(Of T).BoundingBox()
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).BoundingBox()
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split
  id: Split
  parent: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
  langs:
  - csharp
  - vb
  name: Split()
  nameWithType: IBoundingBoxTree<T>.Split()
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.Split()
  type: Method
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/IBoundingBoxTree.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: Split
    path: ../GeometrySharp/Core/BoundingBoxTree/IBoundingBoxTree.cs
    startLine: 9
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: Tuple<IBoundingBoxTree<T>, IBoundingBoxTree<T>> Split()
    return:
      type: System.Tuple{GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1,GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1}
    content.vb: Function Split As Tuple(Of IBoundingBoxTree(Of T), IBoundingBoxTree(Of T))
  overload: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split*
  nameWithType.vb: IBoundingBoxTree(Of T).Split()
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).Split()
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield
  id: Yield
  parent: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
  langs:
  - csharp
  - vb
  name: Yield()
  nameWithType: IBoundingBoxTree<T>.Yield()
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.Yield()
  type: Method
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/IBoundingBoxTree.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: Yield
    path: ../GeometrySharp/Core/BoundingBoxTree/IBoundingBoxTree.cs
    startLine: 11
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: T Yield()
    return:
      type: '{T}'
    content.vb: Function Yield As T
  overload: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield*
  nameWithType.vb: IBoundingBoxTree(Of T).Yield()
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).Yield()
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible(System.Double)
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible(System.Double)
  id: IsIndivisible(System.Double)
  parent: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
  langs:
  - csharp
  - vb
  name: IsIndivisible(Double)
  nameWithType: IBoundingBoxTree<T>.IsIndivisible(Double)
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.IsIndivisible(System.Double)
  type: Method
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/IBoundingBoxTree.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: IsIndivisible
    path: ../GeometrySharp/Core/BoundingBoxTree/IBoundingBoxTree.cs
    startLine: 13
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: bool IsIndivisible(double tolerance)
    parameters:
    - id: tolerance
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Function IsIndivisible(tolerance As Double) As Boolean
  overload: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible*
  nameWithType.vb: IBoundingBoxTree(Of T).IsIndivisible(Double)
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).IsIndivisible(System.Double)
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty
  commentId: M:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty
  id: IsEmpty
  parent: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
  langs:
  - csharp
  - vb
  name: IsEmpty()
  nameWithType: IBoundingBoxTree<T>.IsEmpty()
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.IsEmpty()
  type: Method
  source:
    remote:
      path: GeometrySharp/Core/BoundingBoxTree/IBoundingBoxTree.cs
      branch: dev/ceca/docfx
      repo: https://github.com/cesarecaoduro/GeometrySharp
    id: IsEmpty
    path: ../GeometrySharp/Core/BoundingBoxTree/IBoundingBoxTree.cs
    startLine: 15
  assemblies:
  - GeometrySharp
  namespace: GeometrySharp.Core.BoundingBoxTree
  syntax:
    content: bool IsEmpty()
    return:
      type: System.Boolean
    content.vb: Function IsEmpty As Boolean
  overload: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty*
  nameWithType.vb: IBoundingBoxTree(Of T).IsEmpty()
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).IsEmpty()
references:
- uid: GeometrySharp.Core.BoundingBoxTree
  commentId: N:GeometrySharp.Core.BoundingBoxTree
  name: GeometrySharp.Core.BoundingBoxTree
  nameWithType: GeometrySharp.Core.BoundingBoxTree
  fullName: GeometrySharp.Core.BoundingBoxTree
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox*
  commentId: Overload:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.BoundingBox
  name: BoundingBox
  nameWithType: IBoundingBoxTree<T>.BoundingBox
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.BoundingBox
  nameWithType.vb: IBoundingBoxTree(Of T).BoundingBox
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).BoundingBox
- uid: GeometrySharp.Geometry.BoundingBox
  commentId: T:GeometrySharp.Geometry.BoundingBox
  parent: GeometrySharp.Geometry
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: GeometrySharp.Geometry.BoundingBox
- uid: GeometrySharp.Geometry
  commentId: N:GeometrySharp.Geometry
  name: GeometrySharp.Geometry
  nameWithType: GeometrySharp.Geometry
  fullName: GeometrySharp.Geometry
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split*
  commentId: Overload:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Split
  name: Split
  nameWithType: IBoundingBoxTree<T>.Split
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.Split
  nameWithType.vb: IBoundingBoxTree(Of T).Split
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).Split
- uid: System.Tuple{GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1,GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1}
  commentId: T:System.Tuple{GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1,GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1}
  parent: System
  definition: System.Tuple`2
  name: Tuple<IBoundingBoxTree<T>, IBoundingBoxTree<T>>
  nameWithType: Tuple<IBoundingBoxTree<T>, IBoundingBoxTree<T>>
  fullName: System.Tuple<GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>, GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>>
  nameWithType.vb: Tuple(Of IBoundingBoxTree(Of T), IBoundingBoxTree(Of T))
  fullName.vb: System.Tuple(Of GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T), GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T))
  name.vb: Tuple(Of IBoundingBoxTree(Of T), IBoundingBoxTree(Of T))
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
    name: IBoundingBoxTree
    nameWithType: IBoundingBoxTree
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
    name: IBoundingBoxTree
    nameWithType: IBoundingBoxTree
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
    name: IBoundingBoxTree
    nameWithType: IBoundingBoxTree
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1
    name: IBoundingBoxTree
    nameWithType: IBoundingBoxTree
    fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullName.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield*
  commentId: Overload:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.Yield
  name: Yield
  nameWithType: IBoundingBoxTree<T>.Yield
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.Yield
  nameWithType.vb: IBoundingBoxTree(Of T).Yield
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).Yield
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible*
  commentId: Overload:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsIndivisible
  name: IsIndivisible
  nameWithType: IBoundingBoxTree<T>.IsIndivisible
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.IsIndivisible
  nameWithType.vb: IBoundingBoxTree(Of T).IsIndivisible
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).IsIndivisible
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty*
  commentId: Overload:GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree`1.IsEmpty
  name: IsEmpty
  nameWithType: IBoundingBoxTree<T>.IsEmpty
  fullName: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree<T>.IsEmpty
  nameWithType.vb: IBoundingBoxTree(Of T).IsEmpty
  fullName.vb: GeometrySharp.Core.BoundingBoxTree.IBoundingBoxTree(Of T).IsEmpty
